# Ruler Configuration File - Multi-Controller App
# Central AI agent instruction management
# See https://ai.intellectronica.net/ruler for documentation.

# Default agents for the Multi-Controller App project
default_agents = ["claude", "cursor", "copilot", "windsurf", "cline", "aider"]

# Enable nested rule loading from nested .ruler directories
# This allows modular rule organization throughout the project
nested = true

# --- Agent Specific Configurations ---
# Configure output paths for each AI agent

[agents.claude]
enabled = false  # NEVER touch CLAUDE.md - it's managed separately
output_path = "CLAUDE.md"

[agents.cursor]
enabled = true
output_path = ".cursorrules"

[agents.copilot]
enabled = true
output_path = ".github/copilot-instructions.md"

[agents.windsurf]
enabled = true  
output_path = ".windsurfrules"

[agents.cline]
enabled = true
output_path = ".clinerules"

[agents.aider]
enabled = true
output_path_instructions = "AGENTS.md"
output_path_config = ".aider.conf.yml"

# --- MCP Servers ---
# Central MCP configuration for all agents
# These servers provide AI-powered development capabilities

# Cipher Aggregator - Aggregates all other MCP servers
[mcp_servers.cipher-aggregator]
command = "npx"
args = ["-y", "@byterover/cipher"]
env = { OLLAMA_BASE_URL = "http://localhost:11434", EMBEDDING_MODEL = "nomic-embed-text" }

# Task Master AI - Task management and workflow orchestration
[mcp_servers.taskmaster-ai]
command = "npx"
args = ["-y", "task-master-ai"]
env = { ANTHROPIC_API_KEY = "${ANTHROPIC_API_KEY}", PERPLEXITY_API_KEY = "${PERPLEXITY_API_KEY}", OPENAI_API_KEY = "${OPENAI_API_KEY}" }

# Desktop Commander - File operations and terminal management
[mcp_servers.desktop-commander]
command = "npx"
args = ["-y", "@wonderwhy-er/desktop-commander"]

# FileScope - Codebase analysis and dependency mapping
[mcp_servers.filescope]
command = "npx"
args = ["-y", "@filescope/mcp"]

# Clear Thought - Structured reasoning tools
[mcp_servers.clear-thought]
command = "npx"
args = ["-y", "clear-thought-mcp"]

# Context7 - Official documentation retrieval
[mcp_servers.context7]
command = "npx"
args = ["-y", "@upstash/mcp-context7"]
env = { UPSTASH_API_KEY = "${UPSTASH_API_KEY}" }

# Perplexity Ask - Web research
[mcp_servers.perplexity-ask]
command = "npx"
args = ["-y", "perplexity-mcp-server"]
env = { PERPLEXITY_API_KEY = "${PERPLEXITY_API_KEY}" }

# Memory - Long-term knowledge persistence
[mcp_servers.memory]
command = "npx"
args = ["-y", "memory-mcp-server"]

# Time Server - Timezone utilities
[mcp_servers.time-server]
command = "npx"
args = ["-y", "time-mcp-server"]
