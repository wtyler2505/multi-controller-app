{
  "env": {
    "USE_BUILTIN_RIPGREP": "1",
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "1",
    "CLAUDE_CODE_DISABLE_TERMINAL_TITLE": "0",
    "CLAUDE_CODE_ENABLE_TELEMETRY": "1"
  },
  "permissions": {
    "allow": [
      "mcp__taskmaster-ai__parse_prd",
      "mcp__taskmaster-ai__models",
      "mcp__taskmaster-ai__get_tasks",
      "Bash(npm update:*)",
      "mcp__taskmaster-ai__initialize_project",
      "Bash(copy:*)",
      "Bash(cp:*)",
      "mcp__desktop-commander__list_directory",
      "mcp__desktop-commander__search_files",
      "Bash(npx:*)",
      "Bash(fzf:*)",
      "Bash(powershell:*)",
      "mcp__desktop-commander__read_file",
      "Bash(set NODE_ENV=development)",
      "Bash(task-master-ai:*)",
      "mcp__perplexity-ask__perplexity_ask",
      "Read(/C:\\Users\\wtyle\\node_modules\\task-master-ai/**)",
      "Bash(npm install:*)",
      "Bash(npm ls:*)",
      "mcp__task-master-ai__parse_prd",
      "mcp__task-master-ai__models",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__taskmaster-ai__analyze_project_complexity",
      "mcp__taskmaster-ai__expand_all",
      "mcp__taskmaster-ai__validate_dependencies",
      "mcp__taskmaster-ai__generate",
      "mcp__taskmaster-ai__complexity_report",
      "mcp__taskmaster-ai__next_task",
      "Bash(git status)",
      "Bash(git diff:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git log:*)",
      "Bash(npm run lint)",
      "Bash(npm run test:*)",
      "Bash(npm run build)",
      "Bash(npm start)",
      "Bash(npm:*)",
      "Bash(yarn:*)",
      "Bash(node:*)",
      "Bash(git:*)",
      "Bash(docker:*)",
      "Bash(python:*)",
      "Bash(pip:*)",
      "Read(**/*.json)",
      "Read(**/*.js)",
      "Read(**/*.ts)",
      "Read(**/*.py)",
      "Edit(**/*.js)",
      "Edit(**/*.ts)",
      "Edit(**/*.py)",
      "Edit(**/*.json)",
      "Write(**/*.js)",
      "Write(**/*.ts)",
      "Write(**/*.py)",
      "mcp__FileScopeMCP__create_file_tree",
      "mcp__FileScopeMCP__find_important_files",
      "mcp__FileScopeMCP__list_files",
      "mcp__FileScopeMCP__set_file_summary",
      "Bash(mkdir:*)",
      "mcp__clear-thought__sequentialthinking",
      "mcp__clear-thought__mentalmodel",
      "mcp__desktop-commander__get_file_info",
      "mcp__desktop-commander__write_file",
      "mcp__desktop-commander__read_multiple_files",
      "mcp__desktop-commander__create_directory",
      "Bash(dotnet new:*)",
      "Bash(where dotnet)",
      "Bash(Remove-Item \".\\scripts\\migrate-to-monorepo.ps1\" -Force)",
      "Bash(pnpm:*)",
      "mcp__clear-thought__debuggingapproach",
      "Bash(chmod:*)",
      "Bash(./dotnet-install.sh:*)",
      "Bash(dotnet --version)",
      "Bash(\"C:\\Program Files\\dotnet\\dotnet.exe\" --version)",
      "Bash(gh repo create:*)"
    ],
    "deny": [
      "Read(./.env*)",
      "Read(./secrets/**)",
      "Bash(rm -rf:*)",
      "Bash(sudo:*)"
    ],
    "additionalDirectories": [
      "C:\\Users\\wtyle\\AppData\\Local\\claude-cli-nodejs\\Cache\\C--Users-wtyle-multi-controller-app",
      "C:\\Program Files\\dotnet"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "task-master-ai"
  ],
  "statusLine": {
    "type": "command",
    "command": "bash -c 'input=$(cat); MODEL=$(echo \"$input\" | jq -r \".model.display_name\"); DIR=$(echo \"$input\" | jq -r \".workspace.current_dir\"); VERSION=$(echo \"$input\" | jq -r \".version\"); NODE_VER=$(node --version 2>/dev/null || echo \"N/A\"); echo \"[$MODEL] 📁 ${DIR##*/} | Node $NODE_VER | Claude $VERSION\"'"
  }
}