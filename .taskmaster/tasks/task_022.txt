# Task ID: 22
# Title: Migrate MCP Configuration to Cipher Aggregator
# Status: pending
# Dependencies: 21
# Priority: high
# Description: Replace current multi-server MCP setup with Cipher aggregator for unified management
# Details:
**PRIORITY: Work on this AFTER Task 21**

Migration from current 8-server setup to Cipher aggregator mode:
1. Backup existing .mcp.json configuration
2. Configure cipher.yml to include all current MCP servers:
   - TaskMaster AI (task management)
   - Desktop Commander (file/terminal ops)
   - Context7 (documentation)
   - Perplexity Ask (research)
   - Clear Thought (reasoning)
   - Time Server (utilities)
   - FileScope (code analysis)
3. Handle memory server conflict - disable old memory server, use Cipher's
4. Update .mcp.json to single Cipher entry with aggregator mode
5. Test all tools work through Cipher
6. Document configuration in decision log

# Test Strategy:
Test each MCP server's tools through Cipher, verify no tool conflicts, measure startup time impact, validate memory persistence works correctly

# Subtasks:
## 1. Backup existing MCP configuration [pending]
### Dependencies: None
### Description: Create backup of current .mcp.json configuration before migration to Cipher aggregator
### Details:
Copy .mcp.json to .mcp.json.backup-[timestamp]
Document all 8 current MCP servers and their configurations
Export current environment variables to .env.backup
Create rollback script in scripts/rollback-mcp.ps1
Test that backup can be restored

## 2. Configure cipher.yml with all MCP servers [pending]
### Dependencies: 22.1
### Description: Add all 8 existing MCP servers to Cipher's aggregator configuration
### Details:
Add to cipher.yml:
- TaskMaster AI (task management)
- Desktop Commander (file/terminal)
- Context7 (documentation)
- Perplexity Ask (research)
- Clear Thought (reasoning)
- Time Server (utilities)
- FileScope (code analysis)
- Memory server (handle conflict)

Configure each server's transport and authentication
Set up server priority and fallback options

## 3. Resolve memory server conflict [pending]
### Dependencies: 22.2
### Description: Handle conflict between existing memory server and Cipher's built-in memory system
### Details:
Disable old memory server in .mcp.json
Migrate any existing memory data to Cipher format
Update memory-related commands to use Cipher
Test that Cipher's memory system provides all needed functionality
Document migration path for memory operations

## 4. Update .mcp.json to single Cipher entry [pending]
### Dependencies: 22.3
### Description: Replace multi-server MCP configuration with single Cipher aggregator entry
### Details:
Create new .mcp.json with single Cipher entry
Configure Cipher to run in aggregator mode
Ensure all API keys are passed through to Cipher
Set up proper transport configuration (stdio/SSE)
Test that Claude Code recognizes Cipher

## 5. Test all MCP tools through Cipher [pending]
### Dependencies: 22.4
### Description: Verify that all MCP server tools work correctly through the Cipher aggregator
### Details:
Test each server's primary tools:
- TaskMaster: get_tasks, set_task_status
- Desktop Commander: read_file, execute_command
- Context7: get-library-docs
- Perplexity: perplexity_ask
- Clear Thought: sequentialthinking
- FileScope: list_files
- Time Server: get_current_time

Document any tool conflicts or issues
Verify performance is acceptable

## 6. Document configuration in decision log [pending]
### Dependencies: 22.5
### Description: Document the Cipher aggregator migration in the decision log and update MCP_SERVERS.md
### Details:
Update docs/decisions/decision-log.md with:
- Migration rationale
- Configuration approach
- Performance impact

Update ref/MCP_SERVERS.md with:
- New Cipher aggregator setup
- Tool access patterns
- Troubleshooting guide

## 7. Backup current .mcp.json [pending]
### Dependencies: None
### Description: Create comprehensive backup of current MCP configuration before migration to Cipher aggregator
### Details:
Create backups:
- Copy .mcp.json to .mcp.json.backup-[timestamp]
- Export current environment variables to .env.backup
- Document all 8 current MCP servers and their configurations
- Create rollback script: scripts/rollback-mcp.ps1
- Test that backup can be restored successfully
- Store backup documentation in .cipher/migration/

## 8. Create cipher.yml with all 8 MCP servers [pending]
### Dependencies: 22.7
### Description: Configure cipher.yml to include all existing MCP servers in aggregator mode
### Details:
Add all servers to cipher.yml aggregator configuration:
- TaskMaster AI (task management) 
- Desktop Commander (file/terminal operations)
- Context7 (documentation retrieval)
- Perplexity Ask (research capabilities)
- Clear Thought (structured reasoning)
- Time Server (utilities)
- FileScope (code analysis)
- Memory server (handle replacement with Cipher)

Configure transport types, authentication, and server priorities for each

## 9. Configure transport types for each server [pending]
### Dependencies: 22.8
### Description: Set up appropriate transport configurations (stdio, SSE, streamable-http) for each MCP server
### Details:
Configure transports based on server capabilities:
- TaskMaster AI: stdio transport with environment variables
- Desktop Commander: stdio transport 
- Context7: SSE or HTTP transport with API key
- Perplexity Ask: stdio with API key passthrough
- Clear Thought: stdio transport
- Time Server: stdio transport
- FileScope: stdio with base directory configuration
- Set connection timeouts and retry policies
- Configure authentication passthrough where needed

## 10. Test aggregator connectivity [pending]
### Dependencies: 22.9
### Description: Verify that Cipher can successfully connect to and aggregate all MCP servers
### Details:
Run connectivity tests:
- Test Cipher can start in aggregator mode
- Verify connection to each MCP server
- Check that all servers are detected and listed
- Test basic tool invocation through aggregator
- Measure startup time and performance impact
- Verify environment variable passthrough works
- Document any connection issues and resolutions

## 11. Validate all tools work through Cipher [pending]
### Dependencies: 22.10
### Description: Comprehensive testing of all MCP server tools through the Cipher aggregator interface
### Details:
Test critical tools from each server:
- TaskMaster: get_tasks, set_task_status, add_task
- Desktop Commander: read_file, write_file, execute_command
- Context7: resolve-library-id, get-library-docs  
- Perplexity: perplexity_ask
- Clear Thought: sequentialthinking, mentalmodel
- Time Server: get_current_time, convert_time
- FileScope: list_files, get_file_importance

Verify no tool name conflicts
Test error handling and timeouts
Ensure all tools return expected results
Document any issues or limitations

