# Task ID: 24
# Title: Install and Configure Ruler for Centralized AI Agent Instructions
# Status: pending
# Dependencies: None
# Priority: high
# Description: Install Ruler to manage consistent instructions across all AI coding assistants from a single source of truth
# Details:
**PRIORITY: Work on this BEFORE other pending tasks (along with Cipher tasks)**

Ruler is a centralized AI instruction management system that ensures consistency across all AI coding assistants by maintaining a single source of truth in .ruler/ directory and automatically distributing to each agent's configuration files.

Key benefits:
- Single source of truth for all AI agent instructions
- Automatic distribution to Claude, Cursor, Copilot, Windsurf, etc.
- MCP configuration management across agents
- Version control friendly with auto-managed .gitignore
- Agent-specific customization capabilities

Installation steps:
1. Install Ruler globally: npm install -g @intellectronica/ruler
2. Initialize in project: ruler init
3. Create global configuration: ruler init --global
4. Set up .ruler/ directory structure
5. Configure ruler.toml for all agents

# Test Strategy:
Verify Ruler installation, test rule distribution with ruler apply, ensure CLAUDE.md remains intact, validate all agents receive correct instructions, test revert capability

# Subtasks:
## 1. Install Ruler globally and verify [pending]
### Dependencies: None
### Description: Install Ruler framework globally using npm and verify successful installation
### Details:
Run: npm install -g @intellectronica/ruler
Verify with: ruler --version
Check Node.js compatibility
Document installation path and version
Test basic ruler commands work

## 2. Initialize Ruler in project [pending]
### Dependencies: 24.1
### Description: Initialize Ruler in the Multi-Controller project root directory
### Details:
Run: ruler init in project root
This creates:
- .ruler/ directory structure
- Default ruler.toml configuration
- .ruler/.gitignore (auto-managed)
- Initial AGENTS.md template

Verify directory structure is created
Check .gitignore is properly configured

## 3. Create global Ruler configuration [pending]
### Dependencies: 24.2
### Description: Set up global Ruler configuration for team-wide standards
### Details:
Run: ruler init --global
Creates global config at ~/.ruler/

Configure global settings:
- Team coding standards
- Common MCP servers
- Shared development patterns
- Default agent configurations

Test global config is recognized

## 4. Set up .ruler directory structure [pending]
### Dependencies: 24.3
### Description: Create the proper directory structure within .ruler for organized rule management
### Details:
Create subdirectories:
- .ruler/core/ (fundamental rules)
- .ruler/patterns/ (code patterns)
- .ruler/agents/ (agent-specific rules)
- .ruler/mcp/ (MCP configurations)
- .ruler/templates/ (reusable templates)

Add README.md to each directory
Document directory purposes

## 5. Configure initial ruler.toml [pending]
### Dependencies: 24.4
### Description: Set up the initial ruler.toml configuration for all supported AI agents
### Details:
Configure in ruler.toml:
- agents = ["claude", "cursor", "copilot", "windsurf"]
- default_agent = "claude"
- mcp_merge_strategy = "combine"
- output_paths for each agent
- version_control settings

Test configuration with: ruler validate
Document configuration choices

