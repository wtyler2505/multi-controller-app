# Task ID: 25
# Title: Migrate and Organize Instructions into Ruler Structure
# Status: pending
# Dependencies: 24
# Priority: high
# Description: Extract reusable patterns from CLAUDE.md into modular .ruler/ files for better maintainability
# Details:
**PRIORITY: Work on this AFTER Task 24**

Restructure existing 2000+ line CLAUDE.md into modular, reusable components:

1. Content Organization:
   - Keep Multi-Controller specific content in root CLAUDE.md
   - Extract to .ruler/ directory:
     * verification_protocols.md (verification-first development)
     * task_management.md (Task Master workflows)
     * performance_requirements.md (budgets and validation)
     * rust_patterns.md (Rust/egui patterns)
     * agent_workflows.md (parallel execution, CCPM)
     * mcp_integration.md (MCP server configurations)
     * quality_gates.md (zero tolerance protocols)

2. Leverage concatenation order:
   - Root AGENTS.md (executive summary)
   - .ruler/AGENTS.md (core rules)
   - Other .ruler/*.md files (detailed guidelines)

3. Maintain separation:
   - Project-specific → CLAUDE.md
   - Reusable patterns → .ruler/
   - Team standards → global ruler config

# Test Strategy:
Verify no content loss during migration, test concatenation order works correctly, ensure CLAUDE.md still functions properly, validate rule distribution to all agents

# Subtasks:
## 1. Analyze and categorize CLAUDE.md content [pending]
### Dependencies: None
### Description: Review the 2000+ line CLAUDE.md to identify reusable vs project-specific content
### Details:
Categorize content:
- Project-specific (stays in CLAUDE.md)
- Reusable patterns (move to .ruler/)
- Team standards (global ruler config)

Document categorization decisions
Create migration checklist
Estimate content distribution: ~70% reusable, ~30% project-specific

## 2. Extract verification protocols [pending]
### Dependencies: 25.1
### Description: Move verification-first development rules to .ruler/verification_protocols.md
### Details:
Extract to .ruler/core/verification_protocols.md:
- Verification-first development rules
- Bullshit detection protocols
- Implementation vs proposal distinctions
- Self-verification requirements

Keep in CLAUDE.md:
- Brief reference to verification rules
- Link to .ruler/ file

## 3. Extract performance and quality rules [pending]
### Dependencies: 25.2
### Description: Move performance budgets and quality gates to dedicated .ruler files
### Details:
Create in .ruler/core/:
- performance_requirements.md (budgets, validation)
- quality_gates.md (zero tolerance protocols)
- parallel_execution.md (CCPM integration)
- agent_workflows.md (agent selection matrix)

Update CLAUDE.md to reference these files
Maintain project-specific thresholds in CLAUDE.md

## 4. Extract technology patterns [pending]
### Dependencies: 25.3
### Description: Move Rust, TypeScript, and PowerShell patterns to .ruler/patterns/
### Details:
Create in .ruler/patterns/:
- rust_patterns.md (async, egui, memory safety)
- typescript_patterns.md (type safety, error handling)
- powershell_patterns.md (script safety, encoding)
- git_workflows.md (automation, security)

Keep Multi-Controller specific implementations in CLAUDE.md
Test pattern extraction with ruler apply

## 5. Extract MCP configurations [pending]
### Dependencies: 25.4
### Description: Move MCP server configurations and integration patterns to .ruler/mcp/
### Details:
Create in .ruler/mcp/:
- mcp_integration.md (general MCP patterns)
- taskmaster_config.md (Task Master specifics)
- cipher_config.md (Cipher aggregator setup)
- mcp_servers_list.md (all server configs)

Update CLAUDE.md to import these
Test MCP configuration merging

## 6. Test and validate migration [pending]
### Dependencies: 25.5
### Description: Verify no content loss and proper concatenation after migration to Ruler structure
### Details:
Validation steps:
- Run: ruler apply --verbose
- Check CLAUDE.md still has all needed context
- Verify concatenation order is correct
- Test with Claude Code session
- Compare token usage before/after
- Document any issues found
- Create rollback plan if needed

