# C# Code Analysis Rules for Multi-Controller App
# These rules are enforced by dotnet analyzers

# Code Quality Analyzers
dotnet_diagnostic.CA1062.severity = warning # Validate arguments of public methods
dotnet_diagnostic.CA1303.severity = none    # Do not pass literals as localized parameters
dotnet_diagnostic.CA1031.severity = warning # Do not catch general exception types
dotnet_diagnostic.CA1820.severity = warning # Test for empty strings using string length
dotnet_diagnostic.CA2007.severity = none    # Do not directly await a Task (desktop app)

# Code Style Rules
dotnet_diagnostic.IDE0001.severity = warning # Simplify name
dotnet_diagnostic.IDE0002.severity = warning # Simplify member access
dotnet_diagnostic.IDE0003.severity = warning # Remove this or Me qualification
dotnet_diagnostic.IDE0005.severity = warning # Remove unnecessary import
dotnet_diagnostic.IDE0011.severity = warning # Add braces
dotnet_diagnostic.IDE0040.severity = warning # Add accessibility modifiers
dotnet_diagnostic.IDE0044.severity = warning # Add readonly modifier
dotnet_diagnostic.IDE0060.severity = warning # Remove unused parameter

# Naming Conventions
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.severity = warning
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.symbols = interface
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.style = prefix_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

# Naming styles
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.prefix_with_i.required_prefix = I
dotnet_naming_style.prefix_with_i.capitalization = pascal_case

# Hardware/Device specific rules
dotnet_diagnostic.CA1416.severity = none    # Validate platform compatibility (cross-platform)
dotnet_diagnostic.CA1508.severity = warning # Avoid dead conditional code
dotnet_diagnostic.CA1849.severity = warning # Call async methods when in an async method
dotnet_diagnostic.CA2201.severity = error   # Do not raise reserved exception types
dotnet_diagnostic.CA2215.severity = warning # Dispose methods should call base class dispose

# Performance rules for resource-constrained app
dotnet_diagnostic.CA1806.severity = warning # Do not ignore method results
dotnet_diagnostic.CA1810.severity = warning # Initialize reference type static fields inline
dotnet_diagnostic.CA1822.severity = warning # Mark members as static
dotnet_diagnostic.CA1823.severity = warning # Avoid unused private fields
dotnet_diagnostic.CA1825.severity = warning # Avoid zero-length array allocations

# Security rules
dotnet_diagnostic.CA2100.severity = error   # Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA3075.severity = error   # Insecure DTD processing
dotnet_diagnostic.CA5359.severity = error   # Do not disable certificate validation
dotnet_diagnostic.CA5360.severity = error   # Do not call dangerous methods in deserialization